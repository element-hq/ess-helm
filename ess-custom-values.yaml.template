# ess-custom-values.yaml.template
# Custom values to override the default element-server-suite Helm chart.

# Global server name (your main domain)
serverName: "%%DOMAIN%%"

# Disable all Ingresses, we are using NodePorts and external Nginx for well-known
ingress:
  # enabled: false # This global flag might not exist or work as expected.
  # Disabling per component is safer.
  service:
    type: ClusterIP # Default for services behind ingress, not directly relevant if ingress is off

# Disable wellKnownDelegation component as it's handled by external Nginx
wellKnownDelegation:
  enabled: false
  ingress:
    enabled: false

synapse:
  enabled: true
  ingress: # This section in synapse actually configures the service pointing to HAProxy
    enabled: false # Disable actual ingress object creation for Synapse
    service:
      type: NodePort # This will make the '{{ .Release.Name }}-synapse' service a NodePort service
      ports:
        http:
          port: 8008
          targetPort: 8008
          nodePort: %%INTERNAL_HTTPS_PORT%%
          protocol: TCP
        federation: # For federation traffic, also points to HAProxy's 8008
          port: 8008
          targetPort: 8008
          nodePort: %%INTERNAL_FEDERATION_PORT%%
          protocol: TCP
  # image.tag: "v1.132.0" # Upstream default is already this

elementWeb:
  enabled: true
  ingress:
    enabled: false
  # image.tag: "v1.11.104" # Upstream default is already this

matrixAuthenticationService:
  enabled: true
  ingress:
    enabled: false

matrixRTC:
  enabled: true
  ingress:
    enabled: false
  sfu:
    enabled: true
    # image.tag: "v1.9.0" # Upstream default is already this

    # LiveKit config.yaml additions/overrides
    # The external_ip will be managed by the update-dns.py script by patching the livekit configmap.
    # Default LiveKit config enables TURN on 3478/udp and 5349/tcp.
    # We ensure TURN is enabled and can specify no STUN servers if needed.
    additional:
      "01-ess-turn-config": # Named config snippet
        config: |
          turn:
            enabled: true
            # external_ip: "%%INTERNAL_SERVER_IP%%" # Initial placeholder if needed, but dynamic script will set this
          # To disable Google STUN, if LiveKit includes them by default:
          # stun_servers: []
          # rtc: # WebRTC specific settings if needed for TURN relay port range.
            # udp_port: 3478 # This is for the main UDP listener, not relay. Relay ports are usually dynamic.
            # tcp_port: 7881 # This is for the main TCP listener.

    # Exposing LiveKit SFU media ports via NodePort
    exposedServices:
      rtcTcp: # For WebRTC over TCP
        enabled: true
        portType: NodePort
        port: %%INTERNAL_WEBRTC_TCP_PORT%%
      rtcMuxedUdp: # For WebRTC over UDP (muxed)
        enabled: true
        portType: NodePort
        port: %%INTERNAL_UDP_MUX_PORT%%
      rtcUdp: # For WebRTC UDP port range (non-muxed, if used by clients)
        enabled: true
        portType: NodePort
        portRange:
          startPort: %%INTERNAL_UDP_PORT_RANGE_START%%
          endPort: %%INTERNAL_UDP_PORT_RANGE_END%%

# PostgreSQL - keep enabled as it's a required component
postgres:
  enabled: true

# CertManager configuration - We will create ClusterIssuer separately.
# This tells the chart to use our ClusterIssuer for any certs it might try to make.
certManager:
  clusterIssuer: letsencrypt-%%CERT_ENVIRONMENT%%

# Explicitly disable Traefik if the chart had an option (ess-helm does not manage Traefik itself)
# traefik:
#   enabled: false

# Default service type for most components if they create their own services not via synapse.ingress.service
# This is a guess, as the chart structure varies. Most services are ClusterIP by default.
# We are primarily concerned with the HAProxy-fronted service (`{{.Release.Name}}-synapse`) and LiveKit services.
# Other components like ElementWeb, MAS, RTC API are typically accessed via HAProxy.
# Their individual services (if any beyond what HAProxy targets) should remain ClusterIP.
# Example:
# elementWeb:
#   service:
#     type: ClusterIP
# matrixAuthenticationService:
#   service:
#     type: ClusterIP
# matrixRTC: # For the JWT service, not SFU
#   service:
#     type: ClusterIP

# Ensure all other ingresses are also disabled
haproxy:
  ingress: # Assuming haproxy might have its own ingress definition in some charts
    enabled: false
# initSecrets and deploymentMarkers do not have ingresses.
# postgres does not have an ingress.
