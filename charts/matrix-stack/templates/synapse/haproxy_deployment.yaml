# Copyright 2024 New Vector Ltd
#
# SPDX-License-Identifier: AGPL-3.0-only OR LicenseRef-Element-Commercial

{{- with .Values.synapse.haproxy }}
apiVersion: apps/v1
kind: Deployment
metadata:
{{- with .annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
{{- end }}
  labels:
    {{- include "element-io.synapse.haproxy.labels" $ | nindent 4 }}
    k8s.element.io/confighash: "{{ include (print $.Template.BasePath "/haproxy_configmap.yaml") $ | sha1sum }}"
  name: {{ $.Release.Name }}-synapse-haproxy
  namespace: {{ $.Release.Namespace }}
spec:
  replicas: {{ .replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ $.Release.Name }}-synapse-haproxy
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 2
  template:
    metadata:
      labels:
        {{- include "element-io.synapse.haproxy.labels" $ | nindent 8 }}
        k8s.element.io/confighash: "{{ include (print $.Template.BasePath "/haproxy_configmap.yaml") $ | sha1sum }}"
{{- with .annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
{{- end }}
    spec:
{{- if gt (.replicas | int) 1 }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                  - "{{ $.Release.Name }}-synapse-haproxy"
              topologyKey: kubernetes.io/hostname
{{- end }}
      automountServiceAccountToken: false
      serviceAccountName: {{ include "element-io.synapse.haproxy.serviceAccountName" $ }}
{{- include "element-io.ess-library.pods.pullSecrets" (list $ .image) | nindent 6 }}
{{- with .podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
{{- end }}
{{- with .nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
{{- end }}
{{- with .tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
{{- end }}
      containers:
      - name: haproxy
{{- with .image -}}
{{- if .digest }}
        image: "{{ .registry }}/{{ .repository }}@{{ .digest }}"
        imagePullPolicy: {{ .pullPolicy | default "IfNotPresent" }}
{{- else }}
        image: "{{ .registry }}/{{ .repository }}:{{ .tag }}"
        imagePullPolicy: {{ .pullPolicy | default "Always" }}
{{- end }}
{{- end }}
{{- with .containersSecurityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
{{- end }}
        ports:
        - containerPort: 8008
          name: haproxy-http
          protocol: TCP
        - containerPort: 8009
          name: haproxy-403
          protocol: TCP
        - containerPort: 8405
          name: haproxy-metrics
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /haproxy_test
            port: 8008
          initialDelaySeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /haproxy_test
            port: 8008
          initialDelaySeconds: 20
          timeoutSeconds: 5
{{- with .resources }}
        resources:
          {{- toYaml . | nindent 10 }}
{{- end }}
        volumeMounts:
        - name: haproxy-config
          mountPath: "/usr/local/etc/haproxy"
          readOnly: true
      volumes:
      - configMap:
          name: "{{ $.Release.Name }}-synapse-haproxy"
          defaultMode: 420
        name: haproxy-config
{{- end }}
