# Copyright 2024 New Vector Ltd
#
# SPDX-License-Identifier: AGPL-3.0-only OR LicenseRef-Element-Commercial

{{- with $.Values.synapse }}
{{- if .enabled }}
{{- if (include "element-io.synapse.enabledWorkers" $) | fromJson }}
{{- with .redis }}
apiVersion: apps/v1
kind: Deployment
metadata:
{{- with .annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
{{- end }}
  labels:
    {{- include "element-io.synapse.redis.labels" $ | nindent 4 }}
    k8s.element.io/confighash: "{{ include (print $.Template.BasePath "/synapse/redis_configmap.yaml") $ | sha1sum }}"
  name: {{ $.Release.Name }}-synapse-redis
  namespace: {{ $.Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: "{{ $.Release.Name }}-synapse-redis"
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 2
  template:
    metadata:
      labels:
        {{- include "element-io.synapse.redis.labels" $ | nindent 8 }}
        k8s.element.io/confighash: "{{ include (print $.Template.BasePath "/synapse/redis_configmap.yaml") $ | sha1sum }}"
{{- with .annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
{{- end }}
    spec:
      automountServiceAccountToken: false
      serviceAccountName: {{ include "element-io.synapse.redis.serviceAccountName" $ }}
{{- include "element-io.ess-library.pods.pullSecrets" (list $ .image) | nindent 6 }}
{{- with .podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
{{- end }}
{{- with .nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
{{- end }}
{{- with .tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
{{- end }}
      containers:
      - name: redis
        args:
        - "/config/redis.conf"
{{- with .image -}}
{{- if .digest }}
        image: "{{ .registry }}/{{ .repository }}@{{ .digest }}"
        imagePullPolicy: {{ .pullPolicy | default "IfNotPresent" }}
{{- else }}
        image: "{{ .registry }}/{{ .repository }}:{{ .tag }}"
        imagePullPolicy: {{ .pullPolicy | default "Always" }}
{{- end }}
{{- end }}
{{- with .containersSecurityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
{{- end }}
        ports:
        - containerPort: 6379
          name: redis
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: redis
          initialDelaySeconds: 15
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
{{- with .resources }}
        resources:
          {{- toYaml . | nindent 10 }}
{{- end }}
        volumeMounts:
        - mountPath: /config/redis.conf
          name: redis-config
          readOnly: true
          subPath: redis.conf
        - mountPath: /data
          name: data
          readOnly: false
      restartPolicy: Always
      volumes:
      - configMap:
          name: "{{ $.Release.Name }}-synapse-redis"
          defaultMode: 420
        name: redis-config
      - emptyDir:
          medium: Memory
        name: data
{{- end }}
{{- end }}
{{- end -}}
{{- end -}}
